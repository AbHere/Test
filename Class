-- ⇩ Change this to your sicovam
VAR code NUMBER
EXEC :code := 123456;

-- A) EXPECTED components (PANIER-only model)
WITH expected AS (
  SELECT DISTINCT p.sicopanier sj
  FROM panier p
  WHERE p.sicovam = :code
),
fixings AS (
  SELECT DISTINCT f.cdc_ifc_code_sj sj
  FROM cdc_ifc_clotures f
  WHERE f.code = :code
    AND f.cdc_ifc_code_sj IS NOT NULL
)
SELECT
  (SELECT COUNT(*) FROM expected) AS n_expected_panier,
  (SELECT COUNT(*) FROM fixings)  AS n_fixings_sj
FROM dual;

-- B) EXPECTED components (TITRES→PANIER model = like your original function)
WITH expected AS (
  SELECT DISTINCT p.sicopanier sj
  FROM titres t
  JOIN panier p ON p.sicovam = t.codesj
  WHERE t.sicovam = :code
),
fixings AS (
  SELECT DISTINCT f.cdc_ifc_code_sj sj
  FROM cdc_ifc_clotures f
  WHERE f.code = :code
    AND f.cdc_ifc_code_sj IS NOT NULL
)
SELECT
  (SELECT COUNT(*) FROM expected) AS n_expected_titres_panier,
  (SELECT COUNT(*) FROM fixings)  AS n_fixings_sj
FROM dual;

-- C) Missing EXPECTED underlyings (expected – fixings)
WITH expected AS (
  -- pick ONE of the two expected definitions above that matches your model
  SELECT DISTINCT p.sicopanier sj
  FROM titres t
  JOIN panier p ON p.sicovam = t.codesj
  WHERE t.sicovam = :code
),
fixings AS (
  SELECT DISTINCT f.cdc_ifc_code_sj sj
  FROM cdc_ifc_clotures f
  WHERE f.code = :code
)
SELECT e.sj AS missing_expected_sj
FROM expected e
WHERE NOT EXISTS (
  SELECT 1 FROM fixings f WHERE f.sj = e.sj
)
ORDER BY 1;

-- D) Extras in fixings (fixings – expected)
WITH expected AS (
  SELECT DISTINCT p.sicopanier sj
  FROM titres t
  JOIN panier p ON p.sicovam = t.codesj
  WHERE t.sicovam = :code
),
fixings AS (
  SELECT DISTINCT f.cdc_ifc_code_sj sj
  FROM cdc_ifc_clotures f
  WHERE f.code = :code
)
SELECT f.sj AS extra_in_fixings_not_in_panier
FROM fixings f
WHERE NOT EXISTS (
  SELECT 1 FROM expected e WHERE e.sj = f.sj
)
ORDER BY 1;

-- E) Per-date coverage: dates where present < expected
WITH expected AS (
  SELECT COUNT(*) n_expected
  FROM (
    SELECT DISTINCT p.sicopanier
    FROM titres t
    JOIN panier p ON p.sicovam = t.codesj
    WHERE t.sicovam = :code
  )
),
per_date AS (
  SELECT f.cdc_ifc_date d, COUNT(DISTINCT f.cdc_ifc_code_sj) n_present
  FROM cdc_ifc_clotures f
  WHERE f.code = :code
  GROUP BY f.cdc_ifc_date
)
SELECT p.d, p.n_present, e.n_expected
FROM per_date p CROSS JOIN expected e
WHERE NVL(p.n_present,0) < e.n_expected
ORDER BY p.d;
